unit AuthCore;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs;

type
  TForm9 = class(TForm)
  private
    { Private declarations }
  public
    { Public declarations }
  end;

type
  TPupil = record
    firstname: string;
    lastname: string;
    className: string;
  end;

  TUser = record
    login: string;
    password: string;
  end;

  TPupilsList = array of TPupil;
  TUsersList = array of TUser;

implementation
function AddUser(login: string; password: string);
function checkExists(login: string): boolean;
function auth(login: string; password: string): boolean;


var
  Form9: TForm9;
  usersList: TUsersList;

{$R *.dfm}


function AddUser(login: string; password: string): boolean;
// TODO encrypt password
var
  user: TUser;
begin
  user.login := login;
  user.password := password;
  SetLength(UsersList, Length(UsersList)+1);
  TUsersList[High(TUsersList)] := user;
end;

function checkExists(login: string): boolean;
var
  i: integer;
begin
  for i := 0 to Length(UsersList)-1 do
  begin
    if UsersList[i].login = login then
    begin
      Result := true;
      break;
    end;
  end;
end;

function auth(login: string; password: string): boolean;
begin
  if not checkExists(login) then
    begin
      Result := false;
    end;
    Result := true;
end;
end.
