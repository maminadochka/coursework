unit MainScreen;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, AuthCore, UsersCore;

type
  TForm1 = class(TForm)
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    LoginInp: TEdit;
    PasswordInp: TEdit;
    LoginBtn: TButton;
    Button2: TButton;
    Button1: TButton;
    procedure LoginBtnClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  usersList: TUsersList;

implementation
uses UserScreen, ParentsScreen, UsersManage;
{$R *.dfm}


procedure TForm1.Button1Click(Sender: TObject);
begin
  Form6.ShowModal;
end;

procedure startup();
// creates new users for testing
begin
  AuthCore.AddUser(usersList, 'ksu', '123');
  AuthCore.AddUser(usersList, 'bolt', '4');
  UsersCore.createUser(usersList, 'ksu', 'Ksenia', 'Tsusalevich', 'zavuch', '11A', '', '');
  UsersCore.createUser(usersList, 'bt', 'Sveta', 'Boltak', 'teacher', '10A', '', '');
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  Form1.color:=$ecb2ce;
  startup();
end;

procedure TForm1.LoginBtnClick(Sender: TObject);
var
  user: TUser;
begin
  if auth(usersList, LoginInp.Text, PasswordInp.Text) then
  begin
    user := getUser(usersList, LoginInp.Text);
//    Form2.UserName.Caption := user.fullname;
    Form2.ShowModal();
  end
  else
  begin
    ShowMessage('auth failed!');
  end;
end;
end.
